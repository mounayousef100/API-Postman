{
	"info": {
		"_postman_id": "9808fdec-58a2-4997-80dc-51cf72110c86",
		"name": "EmployeeAPIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24764873"
	},
	"item": [
		{
			"name": "GET Single Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Contant-Typy header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							" const jsonData = pm.response.json();\r",
							"  pm.test(\"Test data type of the response\", function () {\r",
							"  pm.expect(jsonData.employee_name).to.be.a(\"String\");  \r",
							"  pm.expect(jsonData.employee_age).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"  pm.test(\"Test data value of the response\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.id).to.eql(1);  \r",
							"  pm.expect(jsonData.employee_name).to.eql(\"Tiger Nixon\");\r",
							"  pm.expect(jsonData.employee_salary).to.eql(320800);  \r",
							"  pm.expect(jsonData.employee_age).to.eql(61);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"employee_name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"employee_salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"employee_age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"profile_image\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"employee_name\",\r",
							"    \"employee_salary\",\r",
							"    \"employee_age\",\r",
							"    \"profile_image\"\r",
							"  ]\r",
							"}\r",
							"pm.test('Schema is valid', function() {\r",
							"pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/employee/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employee",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET All Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Contant-Typy header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/employee",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employee"
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE New Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Contant-Typy header present\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Contant-Typy header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							" const jsonData = pm.response.json();\r",
							"  pm.test(\"Test data type of the response\", function () {\r",
							"  pm.expect(jsonData.employee_name).to.be.a(\"String\");  \r",
							"  pm.expect(jsonData.employee_age).to.be.a(\"number\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n            \r\n            \"employee_name\": \"Ali Omar\",\r\n            \"employee_salary\": 58800,\r\n            \"employee_age\": 20,\r\n            \"profile_image\": \"\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employee",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employee"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Contant-Typy header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							" const jsonData = pm.response.json();\r",
							"  pm.test(\"Test data type of the response\", function () {\r",
							"  pm.expect(jsonData.employee_name).to.be.a(\"String\");  \r",
							"  pm.expect(jsonData.employee_age).to.be.a(\"number\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n        \"employee_name\": \"Airi Satou\",\r\n        \"employee_salary\": 1500,\r\n        \"employee_age\": 33,\r\n        \"profile_image\": \"\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employee/18",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employee",
						"18"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Contant-Typy header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/employee/22",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employee",
						"22"
					]
				}
			},
			"response": []
		}
	]
}